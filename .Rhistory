M <- matrix(sample, nrow = 100, ncol = 50)
print(M)
sample <- sample(100,50)
print(sample)
x <- runif(20,0,500)
if (x[x> 0 & x <= 100]) {
x <- x[x^1/2]
else if (x[x > 100 & x <= 300]) {
if (x[x> 0 & x <= 100]) {
x <- x[x^1/2]
else if (x[x > 100 & x <= 300]) {
if (x[x> 0 & x <= 100]) {
x <- x[x^1/2]
}
else if (x[x > 100 & x <= 300]) {
x <- runif(20,0,500)
if (x[x> 0 & x <= 100]) {
x <- x[x^1/2]
}
else if (x[x > 100 & x <= 300]) {
x <- runif(20,0,500)
x[x<100] <- x^(1/2)
x <- 0:20
x[x<=10] <- x^(1/2)
x <- 0:20
x[x<=10] <- 100
x <- runif(20,0,500)
x[x<=10] <- x^(1/2)
if (x[x <= 100]) {
x[x^1/2]
}
else if (x[x > 100 & x <= 300]) {
x <- runif(20,0,500)
if (x[x <= 100]) {
x[x^1/2]
}
x <- runif(20,0,500)
if (x[x <= 100]) {
x^1/2
}
else if (x[x > 100 & x <= 300]) {
x <- runif(20,0,500)
if (x[x <= 100]) {
x^(1/2)
}
else if (x[x > 100 & x <= 300]) {
sample <- sample(100,50)
M <- matrix(sample, nrow = 100, ncol = 50)
print(M)
sample <- runif(5000,0,500)
M <- matrix(sample, nrow = 100, ncol = 50)
print(M)
print(M)
I <- diag(8)
print(I)
I3 <- matrix(I, nrow = 32, ncol = 2)
print(I3)
typeof(I3)
View(M)
View(I)
sample <- runif(5000,0,500)
M <- matrix(sample, nrow = 100, ncol = 50)
if(! is.matrix(M)) stop("M must be a matrix")
y <- runif(100,0,500)
x <- runif(20,0,500)
x <- runif(20,0,500)
x <- runif(20,0,500)
x <- runif(20,0,500)
x <- runif(20,0,500)
x <- runif(20,0,500)
if (x[x <= 100]) {
x^(1/2)
}
else if (x[x > 100 & x <= 300]) {
if (x[x <= 100]) {
x^(1/2)
}
x <- runif(20,0,500)
if (x[x <= 100]) {{
x^(1/2)
}
else if (x[x > 100 & x <= 300]) {
print (x)
len(x)
large(x)
length(x)
x <- runif(20,0,500)
if (x[x <= 100]) {{
x^(1/2)
}
else if (x[x > 100 & x <= 300]) {
for (y in vector) {
}
for (y in x) {
}
for (y in x) {
}
for (y in x) {
}
for (y in x) {
}
for (y in x) {
if (x[x <= 100]) {{
x^(1/2)
}
else if (x[x > 100 & x <= 300]) {
x <- runif(20,0,500)
c(100)
for y in x  {
for y in x  {
new.function <- function() {
for (i in x) {
if (x <= 100) { i =  x^(1/2)
}
else if (x > 100 & x <= 300) {
i <- x - 5
} else {
i <- 50
}
}}
new.function()
new.function()
print (x)
for (i in x) {
if (x <= 100) { i =  x^(1/2)
}
else if (x > 100 & x <= 300) {
i <- x - 5
} else {
i <- 50
}
}}
for (i in x) {
if (x <= 100) { i =  x^(1/2)
}
else if (x > 100 & x <= 300) {
i <- x - 5
} else {
i <- 50
}
}
print (i)
x <- runif(20,0,500)
for (i in x) {
if (x <= 100) { i =  x^(1/2)
}
else if (x > 100 & x <= 300) {
i <- x - 5
} else {
i <- 50
}
}
print (i)
}
x <- runif(20,0,500)
for (i in x) {
if (x <= 100) { i =  x^(1/2)
}
else if (x > 100 & x <= 300) {
i <- x - 5
} else {
i <- 50
}
i = x
}
print (x)
}
for (x in x) {
if (x <= 100) { i =  x^(1/2)
}
else if (x > 100 & x <= 300) {
i <- x - 5
} else {
i <- 50
}
i = x
}
print (x)
}
x <- runif(20,0,500)
for (x in x) {
if (x <= 100) { x =  x^(1/2)
}
else if (x > 100 & x <= 300) {
x <- x - 5
} else {
x <- 50
}
}
print (x)
}
if(! is.vector(M)) stop("M must be a matrix")
sample <- runif(5000,0,500)
y <- runif(100,0,500)
M <- matrix(sample, nrow = 100, ncol = 50)
if(! is.vector(y)) stop("M must be a matrix")
if(! is.matrix(M)) stop("M must be a matrix")
x <- matrix(rnorm(500), 100, 5)  # 100 filas , 5 columnas
View(x)
M <- matrix(rnorm(500), 100, 50)
View(M)
M <- matrix(sample, 100, 50)
sample <- runif(5000,0,500)
M <- matrix(sample, 100, 50)
apply(x, 2, min)
apply(x, 1, max)
sample <- runif(5000,0,500)
y <- runif(100,0,500)
M <- matrix(sample, 100, 50)
if(! is.vector(y)) stop("M must be a matrix")
if(! is.matrix(M)) stop("M must be a matrix")
apply(M, 1, min)
apply(M, 1, max)
str(apply)
str(rnorm)
x <- matrix(rnorm(500), 100, 5)  # 100 filas , 5 columnas
apply(x, 2, mean, simplify = F)  # MARGIN == 2 para columnas
apply(x, 2, mean, simplify = TRUE)
apply(x, 1, sd)  # MARGIN == 1 para filas
apply(x, 2, min)
apply(x, 1, max)
sample <- runif(5000,0,500)
y <- runif(100,0,500)
M <- matrix(sample, 100, 50)
if(! is.vector(y)) stop("y must be a vector")
if(! is.matrix(M)) stop("M must be a matrix")
x <- 10
h <- apply(M, 2, min)
z <- apply(M, 2, max)
calculator <- function (x,h,z)
{
result = (x - h) / (z - h)
return(result)
}
print(result)
View(calculator)
sample <- runif(5000,0,500)
M <- matrix(sample, 100, 50)
View(M)
if(! is.matrix(M)) stop("M must be a matrix")
calculator <- function (M,h,z) {
h <- apply(M, 2, min)
z <- apply(M, 2, max)
result = (M - h) / (z - h)
return(result)
}
calculator(M, h, z) [1]
y <- runif(100,0,500)
if(! is.vector(y)) stop("y must be a vector")
calculator1 <- function (y,k,l) {
k <- apply(y, 1, min)
l <- apply(y, 1, max)
result = (y - k) / (l - k)
return(result)
}
calculator1(y, k, l) [1]
## Para la matriz
sample <- runif(5000,0,500)
M <- matrix(sample, 100, 50)
if(! is.matrix(M)) stop("M must be a matrix")
calculator <- function (M,h,z) {
h <- apply(M, 2, min)
z <- apply(M, 2, max)
result = (M - h) / (z - h)
return(result)
}
calculator(M, h, z) [1]
sample <- runif(5000,0,500)
M <- matrix(sample, 100, 50)
if(! is.matrix(M)) stop("M must be a matrix")
calculator <- function (M,h,z) {
h <- apply(M, 2, min)
z <- apply(M, 2, max)
result = (M - h) / (z - h)
return(result)
}
calculator(M, h, z)
View(calculator)
print(result)
str(mapply)
str(rnorm)
## Para la matriz
sample <- runif(5000,0,500)
M <- matrix(sample, 100, 50)
if(! is.matrix(M)) stop("M must be a matrix")
calculator <- function (M,h,z) {
h <- apply(M, 2, min)
z <- apply(M, 2, max)
result = (M - h) / (z - h)
return(result)
}
calculator(M, h, z)
x <- runif(20,0,500)
for (x in length(x)) {
if (x <= 100) {
next
x =  x^(1/2)
} else if (x > 100 & x <= 300) {
next
x <- x - 5
} else {
x <- 50
}
}
x <- runif(20,0,500)
for (x in length(x)) {
if (x <= 100) {
next
x <-  x^(1/2)
} else if (x > 100 & x <= 300) {
next
x <- x - 5
} else {
x <- 50
}
}
x <- runif(20,0,500)
for (x in x) {
if (x <= 100) {
next
x <-  x^(1/2)
} else if (x > 100 & x <= 300) {
next
x <- x - 5
} else {
x <- 50
}
}
print (x)
x <- runif(20,0,500)
y <- c(x)
for (y in y) {
if (y <= 100) {
next
y <-  y^(1/2)
} else if (y > 100 & y <= 300) {
next
y <- y - 5
} else {
y <- 50
}
y = x
}
print (y)
x <- runif(20,0,500)
y <- c(x)
for (y in x) {
if (y <= 100) {
next
y <-  y^(1/2)
} else if (y > 100 & y <= 300) {
next
y <- y - 5
} else {
y <- 50
}
y = x
}
print (y)
x <- runif(20,0,500)
y <- c(x)
for (y in y) {
if (y <= 100) {
next
y[y] <-  y^(1/2)
} else if (y > 100 & y <= 300) {
next
y[y] <- y - 5
} else {
y[y] <- 50
}
}
x <- runif(20,0,500)
y <- c(x)
for (y in y) {
if (y<0 & y <= 100) {
next
y[y] <-  y^(1/2)
} else if (y > 100 & y <= 300) {
next
y[y] <- y - 5
} else {
y[y] <- 50
}
}
print (y)
for (y in y) {
if (y<0 & y <= 100) {
y[y] <-  y^(1/2)
} else if (y > 100 & y <= 300) {
y[y] <- y - 5
} else {
y[y] <- 50
}
}
if (y<0 & y <= 100) {
y[y] <-  y^(1/2)
} else if (y > 100 & y <= 300) {
y[y] <- y - 5
} else {
y[y] <- 50
}
x <- runif(20,0,500)
x <- runif(20,0,500)
if (x <0 & x <= 100) {
y <-  y^(1/2)
} else if (y > 100 & y <= 300) {
y <- y - 5
} else {
y <- 50
}
y <- runif(20,0,500)
if (x <0 & x <= 100) {
y <-  y^(1/2)
} else if (y > 100 & y <= 300) {
y <- y - 5
} else {
y <- 50
}
print (y)
y <- runif(20,0,500)
for (i in y) {
if (i <0 & i <= 100) {
next
i <-  i^(1/2)
} else if (i > 100 & i <= 300) {
i <- i - 5
} else {
i <- 50
}
i = y
}
print (y)
##Usamos liberÃ­a para poder subir archivos excel
library("readxl")
install.packages("readr")
library("readxl")
getwd()
user <- Sys.getenv("USERNAME")  # username
print(user)
user <- Sys.getenv("USERNAME")  # username
print(user)
setwd( paste0("C:/Users/",user,"/Documents/GitHub/First-Repository") ) # set directorio
setwd( paste0("/Users/henryandreumarquezsalinas/Documents/GitHub/First-Repository") )
getwd()
install.packages("tidyr")
install.packages("dplyr")
junin_data <- read_excel("../data/Region_Junin.xlsx", na="")
junin_data <- read_excel("../data/Region_Junin.xlsx")
getwd()
junin_data <- read_excel("../data/Region_Junin.xlsx")
junin_data <- read_excel("/Users/henryandreumarquezsalinas/Documents/GitHub/First-Repository/Region_Junin.xlsx")
junin_data <- read_excel("/Users/henryandreumarquezsalinas/Documents/GitHub/First-Repository/Region_Junin.xlsx", na="")
dim(junin_data)
class(junin_data)
attach(junin_data)
str(junin_data)
lapply(junin_data, class)
str(lapply)
sapply(junin_data, class) # sapply(x, FUN):: vector, Datrame,
summary(junin_data) #
class( junin_data["Place"] ) # Dataframe
junin_data["Place"]
class( junin_data[Place,] )
class( junin_data$Place ) # lista o vector
unique(Place)
any( is.na(junin_data["Place"]) ) # Sali? TRUE: por lo menos hay un missing value
any(is.na(junin_data["total_write"])) #TRUE
any(is.na(junin_data$Region)) #False: no hay ning?n missing value en region
any(is.na(women_read))  #  al menos una observaci?n  es Missing
any(is.na(total_read)) #False
any(is.na(whites)) #TRUE
any(is.na(natives)) #True
## cantidad de missing
sum(is.na(Place)) #Hay 11 missings
junin_data %>% drop_na()
junin_data2 <- junin_data %>% drop_na()
junin_data %>% drop_na()
junin_data2 <- junin_data %>% replace_na(list(Place = "Place1"))
names(junin_data)
junin_data <- rename(junin_data, c("comunidad"="Place", "homxlee" = "men_not_read", "mujerxlee" = "women_not_read", "totalxlee" = "total_not_read" ))
names(junin_data)
install.packages("reshape")
names(junin_data)
junin_data <- rename(junin_data, c("comunidad"="Place", "homxlee" = "men_not_read", "mujerxlee" = "women_not_read", "totalxlee" = "total_not_read" ))
require(reshape)
junin_data <- rename(junin_data, c("comunidad"="Place", "homxlee" = "men_not_read", "mujerxlee" = "women_not_read", "totalxlee" = "total_not_read" ))
names(junin_data)
View(junin_data)
junin_data <- rename(junin_data, c(Place = "Comunidad", men_not_read = "homxlee", women_not_read = "mujerxlee", total_not_read = "totalxlee" ))
names(junin_data)
junin_data2 <- junin_data[,c('comunidad','District')] # seleccionar columnas
junin_data2 <- junin_data[,c('Comunidad','District')] # seleccionar columnas
unique(junin_data2)
junin_data2 <- junin_data[,c('Comunidad')]
unique(junin_data2)
junin_data2 <- junin_data[,c('District')]
unique(junin_data2)
names(junin_data)
View(junin_data)
mujer_noescribenilee <- mujerxlee/totalxlee
hombre_noescribenilee <- homxlee/totalxlee
nativos_total <- natives/(peruvian_men + peruvian_women + foreign_men + foreign_women)
View(junin_data)
junin_data <- rename(junin_data, c(Place = "Comunidad", men_not_read = "homxlee", women_not_read = "mujerxlee", total_not_read = "totalxlee" ))
mujer_noescribenilee <- mujerxlee/totalxlee
mujer_noescribenilee <- junin_data$mujerxlee/ junin_data$totalxlee
hombre_noescribenilee <- junin_data$homxlee/ junin_data$totalxlee
nativos_total <- junin_data$natives/(peruvian_men + peruvian_women + foreign_men + foreign_women)
junin_data <- cbind(junin_data[, c(1, 3)],mujer_noescribenilee, hombre_noescribenilee, nativos_total)
View(junin_data)
View(junin_data)
